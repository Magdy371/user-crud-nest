// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Add Role model
model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  users       User[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id                  Int       @id @default(autoincrement())
  name                String
  email               String    @unique
  password            String
  role                Role      @relation(fields: [roleId], references: [id])
  roleId              Int       @default(1)
  ref_token           String?
  ref_tokenExpireDate DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  Order               Order[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  Int
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Order {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  orderItems OrderItem[]
  total      Float
  status     OrderStatus @default(Pending)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int     @default(1)
  price     Float
}

enum OrderStatus {
  Pending
  Processing
  Delivered
  Cancelled
}
